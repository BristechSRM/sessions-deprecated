{
    "swagger": "2.0",
    "info": {
        "title": "Speakers",
        "description": "Retrieve details about Bristech speakers",
        "version": "1.0.0"
    },
    "host": "api.bris.tech",
    "schemes": [
        "https"
    ],
    "basePath": "/",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/talkoutlines": {
            "get": {
                "summary": "Retrieves talkoutlines summaries",
                "description": "The talkoutlines summary details including speaker forename, surname and star rating\n",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SpeakerSummary"
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "SpeakerSummary": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "guid",
                    "description": "Unique identifier."
                },
                "forename": {
                    "type": "string",
                    "description": "Forename."
                },
                "surname": {
                    "type": "string",
                    "description": "Surname."
                },
                "rating": {
                    "type": "integer",
                    "description": "Rating (from 1 to 5)"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Image URL representing the product."
                }
            }
        },
        "Error": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ErrorDetail"
                    }
                }
            }
        },
        "ErrorDetail": {
            "type": "object",
            "required": [
                "resource",
                "code",
                "message"
            ],
            "properties": {
                "resource": {
                    "type": "string",
                    "description": "The resource being accessed"
                },
                "field": {
                    "type": "string",
                    "description": "Optional field used for invalid or missing fields"
                },
                "code": {
                    "type": "string",
                    "description": "Can be missing (i.e. a resource is missing), missing-field (a required field was not sent in the request), invalid (the specified field does not pass validation or already-exists (the resource already exists).",
                    "enum": [
                        "missing",
                        "missing-field",
                        "invalid",
                        "already-exists"
                    ]
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}